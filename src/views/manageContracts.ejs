<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gerenciar Contratos</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.3/css/all.min.css">
    <!-- jquery -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <!-- CSS do Toastr -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet">
    <!-- ag-grid -->
    <script src="https://cdn.jsdelivr.net/npm/ag-grid-community/dist/ag-grid-community.min.js"></script>
    <!-- JS do Toastr -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

    <link rel="stylesheet" href="/css/global.css">
    <style>
        main,
        section {
            width: 100%;
            height: 100%;
        }

        .manage-contract .title {
            font-size: 3rem;
            font-weight: 300;
            margin-bottom: 25px;
            text-align: center;
        }

        .ag-root-wrapper-body.ag-layout-normal {
            height: 100%;
        }
    </style>
</head>

<body>
    <main>
        <section class="manage-contract">
            <div class="center">
                <h3 class="title">Gerenciar contratos</h3>
                <div id="myGrid" style="height: 100%" class="ag-theme-material"></div>
            </div>
        </section>
    </main>

    <script src="/js/contracts.js"></script>

    <script type="text/javascript">
        let gridApi;

        class CustomButtonComponent {
            eGui;
            eButton;
            eventListener;

            init() {
                this.eGui = document.createElement("div");
                let eButton = document.createElement("button");
                eButton.className = "btn btn-outline-secondary";
                eButton.textContent = "Ver Contrato";
                this.eventListener = () => {
                    toastr.info("Essa funcionalidade ainda está em desenvolvimento.")
                };
                eButton.addEventListener("click", this.eventListener);
                this.eGui.appendChild(eButton);
            }

            getGui() {
                return this.eGui;
            }

            refresh() {
                return true;
            }

            destroy() {
                if (this.eButton) {
                    this.eButton.removeEventListener("click", this.eventListener);
                }
            }
        }

        const gridOptions = {
            // Data to be displayed
            rowData: [
                ...data
            ],
            // Columns to be displayed (Should match rowData properties)
            columnDefs: [
                {
                    headerName: "Nome",
                    valueGetter: (p) => p.data.name,
                    flex: 1,
                },
                {
                    field: "value",
                    headerName: "Valor",
                    valueFormatter: (p) => {
                        console.log(p);
                        return (p.value / 100).toLocaleString("pt-BR", { minimumFractionDigits: 2 })
                    },
                    flex: 1,
                    sortable: true,
                },
                {
                    headerName: "Vigência",
                    valueGetter: (p) => p.data.validity_start + " à " + p.data.validity_end,
                    flex: 2
                },
                {
                    headerName: "Pagamento",
                    valueGetter: (p) => p.data.paymentDate,
                    flex: 1,
                },
                {
                    headerName: "Categoria",
                    valueGetter: (p) => p.data.category,
                    flex: 1,
                },

                { field: "", cellRenderer: CustomButtonComponent, flex: 1, sortable: false },
            ],
        };

        const gridDiv = document.querySelector("#myGrid");
        gridApi = agGrid.createGrid(gridDiv, gridOptions);
    </script>
</body>

</html>